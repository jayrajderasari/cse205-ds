# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        a = headA
        b = headB
        la = lb = 0
        while (a != None or b != None):
            if a != None:
                la += 1
                a = a.next
            if b!=None:
                lb += 1
                b = b.next
        a = headA
        b = headB
        if la>lb:
            for i in range(0,la-lb):
                a = a.next
        else:
            for i in range(0,lb-la):
                b = b.next
        while a != None and b != None:
            if(a == b):
                return a
            a = a.next
            b = b.next
        return None