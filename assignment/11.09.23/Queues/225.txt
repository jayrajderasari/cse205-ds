class queue:
    def __init__(self):
        self.queue = list()
    def enqueue(self,data):
        self.queue.append(data)
    def dequeue(self):
        return self.queue.pop(0)
    def last(self):
        return self.queue[-1]
    def empty(self):
        return len(self.queue) == 0
    def len(self):
        return len(self.queue)

class MyStack:

    def __init__(self):
        self.stack = queue()
        
    def push(self, x: int) -> None:
        return self.stack.enqueue(x)

    def pop(self) -> int:
        for i in range(0,self.stack.len()-1):
            self.stack.enqueue(self.stack.dequeue())
        A = self.stack.dequeue()
        return A

    def top(self) -> int:
        for i in range(0,self.stack.len()-1):
            self.stack.enqueue(self.stack.dequeue())
        A = self.stack.dequeue()
        self.stack.enqueue(A)
        return A

    def empty(self) -> bool:
        return self.stack.empty()


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()